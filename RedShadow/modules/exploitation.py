import os
import re
import subprocess
import logging

def validate_target(target):
    ip_pattern = r"^\d{1,3}(\.\d{1,3}){3}$"
    domain_pattern = r"^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    return re.match(ip_pattern, target) or re.match(domain_pattern, target)

def run():
    logging.basicConfig(filename="exploitation.log", level=logging.INFO)
    logging.info("Starting exploitation module...")

    target = input("Enter target IP or domain: ").strip()

    if not validate_target(target):
        print("Invalid target format.")
        logging.error("Invalid target format.")
        return

    print(f"Scanning {target} for vulnerabilities...")
    logging.info(f"Scanning target: {target}")

    try:
        subprocess.run(["nmap", "-A", target], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error running nmap: {e}")
        logging.error(f"Error running nmap: {e}")
        return

    exploit_choice = input("Attempt SQL Injection? (yes/no): ").strip().lower()
    if exploit_choice == "yes":
        url = input("Enter vulnerable URL (e.g., http://target.com/page?id=1): ").strip()
        if not re.match(r"^https?://[a-zA-Z0-9.-]+(?:/[a-zA-Z0-9.-]*)*$", url):
            print("Invalid URL format.")
            logging.error("Invalid URL format.")
            return

        try:
            subprocess.run(["sqlmap", "-u", url, "--batch"], check=True)
        except subprocess.CalledProcessError as e:
            print(f"Error running sqlmap: {e}")
            logging.error(f"Error running sqlmap: {e}")
            return

    print("Exploitation module completed.")
    logging.info("Exploitation module completed.")