import os
import subprocess
import logging

def run():
    logging.basicConfig(filename="post_exploitation.log", level=logging.INFO)
    logging.info("Starting post-exploitation module...")

    print("Checking for privilege escalation opportunities...")

    print("\nUser & Group Info:")
    try:
        subprocess.run(["whoami"], check=True)
        subprocess.run(["id"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error retrieving user/group info: {e}")
        logging.error(f"Error retrieving user/group info: {e}")

    print("\nChecking sudo permissions:")
    try:
        subprocess.run(["sudo", "-l"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error checking sudo permissions: {e}")
        logging.error(f"Error checking sudo permissions: {e}")

    print("\nSearching for SUID binaries...")
    try:
        subprocess.run(["find", "/usr/bin", "/usr/local/bin", "-perm", "-4000", "-type", "f"], stderr=subprocess.DEVNULL, check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error searching for SUID binaries: {e}")
        logging.error(f"Error searching for SUID binaries: {e}")

    print("\nChecking for world-writable files...")
    try:
        subprocess.run(["find", "/tmp", "/var/tmp", "-perm", "-2", "-type", "f"], stderr=subprocess.DEVNULL, check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error searching for world-writable files: {e}")
        logging.error(f"Error searching for world-writable files: {e}")

    print("\nPost-exploitation checks complete.")
    logging.info("Post-exploitation module completed.")